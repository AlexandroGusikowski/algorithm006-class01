// 590. N叉树的后序遍历

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> result;
        stack<Node *> st;
        if(root == NULL) {
            return {};
        }
        st.push(root);
        while(!st.empty()) {
            Node *temp = st.top();
            st.pop();
            for(Node *next : temp -> children) {
                st.push(next);
                next++;
            }
            result.push_back(temp -> val);
        }
        reverse(result.begin(), result.end());
        return result;
    }
};