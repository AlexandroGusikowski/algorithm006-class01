// 429. N叉树的层序遍历
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root == NULL) {
            return {};
        }
        vector<vector<int>> ans;
        queue<Node *> qu;
        qu.push(root);
        while(!qu.empty()) {
            vector<int> v;
            for(int i = qu.size(); i; i--) {
                Node *curr = qu.front();
                qu.pop();
                v.push_back(curr -> val);
                for(Node *it: curr -> children) {
                    qu.push(it);
                }
            }
            ans.push_back(v);
        }
        return ans;
    }
};