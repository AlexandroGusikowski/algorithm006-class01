// 589. N叉树的前序遍历

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
private:
    void helper(Node * root, vector<int> &result) {
        if(root == NULL) {
            return;
        }
		// push当前节点值进容器
        result.push_back(root -> val);
		// 循环递归当前节点的孩子节点
        for(Node * a : root -> children) {
            helper(a, result);
            a++;
        }
    }
public:
    vector<int> preorder(Node* root) {
        vector<int> result;
        helper(root, result);
        return result;
    }
};